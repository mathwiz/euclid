(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    208052,       4312]
NotebookOptionsPosition[    200998,       4132]
NotebookOutlinePosition[    201341,       4147]
CellTagsIndexPosition[    201298,       4144]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Yohan Lee Lab 10", "Title",
 CellChangeTimes->{{3.7331429390821357`*^9, 3.7331429448505197`*^9}, {
  3.733144523686194*^9, 
  3.7331445468841934`*^9}},ExpressionUUID->"609a9a36-fc97-4f4b-85a8-\
d46feb1ed83a"],

Cell[CellGroupData[{

Cell["Examples", "Section",
 CellChangeTimes->{{3.7331429752178326`*^9, 
  3.7331429766264153`*^9}},ExpressionUUID->"fad52169-de53-4fef-8127-\
afa3bb18c9bc"],

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "[", "x_", "]"}], ":=", 
  RowBox[{"1", "/", 
   RowBox[{"(", 
    RowBox[{"Sqrt", "[", 
     RowBox[{
      RowBox[{"x", "^", "4"}], "+", 
      RowBox[{"x", "^", "3"}], "+", "1"}], "]"}], ")"}]}]}]], "Input",
 CellChangeTimes->{{3.733143056076696*^9, 
  3.733143084894701*^9}},ExpressionUUID->"125552e4-be42-433b-a468-\
17de685b4498"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Function", "[", 
  RowBox[{"x", ",", 
   FractionBox["1", 
    SqrtBox[
     RowBox[{
      SuperscriptBox["x", "4"], "+", 
      SuperscriptBox["x", "3"], "+", "1"}]]]}], "]"}]], "Input",
 NumberMarks->False,ExpressionUUID->"b00f2608-8960-401e-ad3a-7b61ad07d270"],

Cell[BoxData[
 RowBox[{"Function", "[", 
  RowBox[{"x", ",", 
   FractionBox["1", 
    SqrtBox[
     RowBox[{
      SuperscriptBox["x", "4"], "+", 
      SuperscriptBox["x", "3"], "+", "1"}]]]}], "]"}]], "Output",
 CellChangeTimes->{
  3.733143096951906*^9},ExpressionUUID->"62e00679-4c42-47a6-be27-\
f26ee4f7220d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"T3", "[", "x_", "]"}], "=", 
  RowBox[{
   RowBox[{"Series", "[", 
    RowBox[{
     RowBox[{"f", "[", "x", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "3"}], "}"}]}], "]"}], "//", 
   "Normal"}]}]], "Input",
 CellChangeTimes->{{3.733143099439553*^9, 3.7331431254450417`*^9}, {
  3.7331432735742903`*^9, 3.7331432861909156`*^9}, {3.733143322321211*^9, 
  3.733143323949524*^9}},ExpressionUUID->"2753c47e-0350-4ac9-a2b2-\
be57db304b2f"],

Cell[BoxData[
 RowBox[{"1", "-", 
  FractionBox[
   SuperscriptBox["x", "3"], "2"]}]], "Output",
 CellChangeTimes->{3.733143287500417*^9, 
  3.7331433245010076`*^9},ExpressionUUID->"09129cc0-9027-447a-ba1b-\
2db0870e66e2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"f", "[", "x", "]"}], ",", 
     RowBox[{"T3", "[", "x", "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "1.5"}], ",", "1.5"}], "}"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", "\"\<Expressions\>\""}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.733143143737912*^9, 
  3.733143250631107*^9}},ExpressionUUID->"470d7fda-04c3-4c07-b384-\
f2603bb30539"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
          "]]}, Annotation[#, "Charting`Private`Tag$7483#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
EhSqrN+tGapD/wMDVkx9
          "]]}, Annotation[#, "Charting`Private`Tag$7483#2"]& ]}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{-1.5, 1.5}, {-0.13945751590148836`, 1.7750353496154418`}},
      PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       RowBox[{"f", "(", "x", ")"}], 
       RowBox[{"T3", "(", "x", ")"}]}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               TagBox[#, HoldForm], ",", 
               TagBox[#2, HoldForm]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.7331431850162015`*^9, 3.7331432518042603`*^9}, {
   3.733143282495061*^9, 3.7331432948710203`*^9}, 
   3.733143328884677*^9},ExpressionUUID->"f5635a38-ddc5-4b45-a0f1-\
d5fe65a021c7"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Clear", "[", 
  RowBox[{"f", ",", "x"}], "]"}]], "Input",
 CellChangeTimes->{{3.733143378413695*^9, 
  3.7331433819110084`*^9}},ExpressionUUID->"1264cc3d-92e9-4036-8a53-\
f5291410e8a4"],

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "[", "x_", "]"}], ":=", 
  RowBox[{"1", "/", 
   RowBox[{"(", 
    RowBox[{"Sqrt", "[", 
     RowBox[{
      RowBox[{"x", "^", "4"}], "+", 
      RowBox[{"x", "^", "3"}], "+", "1"}], "]"}], ")"}]}]}]], "Input",Expressi\
onUUID->"613cc2e0-830f-4998-94c3-1945c0e7f4fd"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Function", "[", 
  RowBox[{"x", ",", 
   FractionBox["1", 
    SqrtBox[
     RowBox[{
      SuperscriptBox["x", "4"], "+", 
      SuperscriptBox["x", "3"], "+", "1"}]]]}], "]"}]], "Input",
 NumberMarks->False,ExpressionUUID->"d1c23df5-a3fd-43eb-9097-b9e09d650cd8"],

Cell[BoxData[
 RowBox[{"Function", "[", 
  RowBox[{"x", ",", 
   FractionBox["1", 
    SqrtBox[
     RowBox[{
      SuperscriptBox["x", "4"], "+", 
      SuperscriptBox["x", "3"], "+", "1"}]]]}], "]"}]], "Output",
 CellChangeTimes->{
  3.7331434004654603`*^9},ExpressionUUID->"937bdd4f-efb8-473a-944e-\
8de09526cc7a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"T3v2", "[", "x_", "]"}], "=", 
  RowBox[{
   RowBox[{"Series", "[", 
    RowBox[{
     RowBox[{"f", "[", "x", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "1", ",", "3"}], "}"}]}], "]"}], "//", 
   "Normal"}]}]], "Input",
 CellChangeTimes->{{3.733143415808383*^9, 
  3.7331434254811497`*^9}},ExpressionUUID->"ec1f7093-e971-4106-add5-\
43c9cda2653a"],

Cell[BoxData[
 RowBox[{
  FractionBox["1", 
   SqrtBox["3"]], "-", 
  FractionBox[
   RowBox[{"7", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "x"}], ")"}]}], 
   RowBox[{"6", " ", 
    SqrtBox["3"]}]], "+", 
  FractionBox[
   RowBox[{"13", " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "x"}], ")"}], "2"]}], 
   RowBox[{"24", " ", 
    SqrtBox["3"]}]], "+", 
  FractionBox[
   RowBox[{"193", " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "x"}], ")"}], "3"]}], 
   RowBox[{"432", " ", 
    SqrtBox["3"]}]]}]], "Output",
 CellChangeTimes->{
  3.7331434267394886`*^9},ExpressionUUID->"681411bf-f7e1-47fd-aa4f-\
13d1af06c5b7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"f", "[", "x", "]"}], ",", 
     RowBox[{"T3v2", "[", "x", "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "1"}], ",", "2"}], "}"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", "\"\<Expressions\>\""}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.733143443142209*^9, 
  3.733143455079056*^9}},ExpressionUUID->"4954a9b7-5732-4264-95bd-\
91d52b2ff19b"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwV2Hc4lV8cAHAiKqUoOyVFSklZJfmWhvJTysoKiUKFShkpZGdmJCRkpaxk
r2Nlr7hZyYo7rPuGzOJ37j/3Pp/n3vu87znfdd67x8xW02IdExMTK35hvH81
3jO4tkZHSh8UNjAxESA+L6f+ZJGOHFIP3h9mJsA3UK1okqCjXIWzHRUsBKiX
PgrrHcaf29RHO7ET0CFQq/qlmo5ystn4OjkJGCJZZ9/2oaOvPd46YsIE/FXL
dW/hpKMPvOa6544TYDxSP32WnY669SzmRk8QUOH007B4bRqZzvv6eJwkwOMD
m3wqMY2SOVMCipUJ2MSmP+7WMY0cWic4t50ngL/yn6bs62kkx2H4S+8aAbIK
qvtihKeR+LgP7aYlAdo3j5215ZlGJVuPhw5YEWDvL2x2dss0Eo0c+653l4C8
wdm4ib9T6OQ9myMXbAiQ940XUuqfQpu2hsiy2hOg0LvE/TN6CiVU0ge2uBKg
xzJ29HPoFMrYuN7c3I0Ax8PtV71eTqHpipKXhe4EFLqnBB12nkK9aoD0PQk4
flBr03P9KRT/vZ3k6keA4tN05t38UyiUef1pwzACDJIjRWa3TqHkki6JgHAC
nNteQB37FIrgqSkrjiCgZK/+M9uFSVR3fRt92xsClJrXL6GuSSR8eLN3wlsC
TgmbEKYRk+jCBfJ57WQCTiOuwffck+jVf/IVbHkE1PBue8fMMYlOF1m+G8S+
aMN5w5RlEs2PGoTk5xOgIczxQ3huAiXR9b8YF+J4PGXtfvN9AikMnOJ6U0KA
i8JCa9CbCfRo49Ot2ZUEMAX/CZwKmUDvFbsSrKsI8CTPqqv7TSDydl29vdUE
+EcQjRudJ9BB233ywTUERM/Saj0NJ1BX+GbS1Tq8P1n95c67JpDkzoJIl2a8
HvYfz3p5J5C6T9SsQAuOv3Gv0vGtE+jDsxWvPOy6LV3Ff9bGEUcTtxallYCu
u235dsPjyK+tNFvuGwFz+6sybyeNI2b/jJDn33E8XCvuf307jvbTW6hr2H+7
yg/tixhHOpJO/q5dBLB4l3wc9hpHz0xT85y6CeAezU0xujOO+s2OVen3EnAk
PvWd5sFx1Pm+m9zQj/PprUZmt+g4OjHh6yP1E8fvzUKZkdA40gsxevMK+0KI
6s/bm8fRQ4GErVoDBBi5UYSeTtPQH3stp+pBAsxcgiWZKDRk4liDhIYIuOOo
cNJrkIa+nhlwe4j90M7HILidhtKTbjoKDeP6Mt0flZhDQ5edpc0MRwgIMmr7
IPGJhs4OWSWmYofpORRmJNLQrfkt1jPY767WdReE09ABMfZAj184n0/f4W1+
QkMF7Wsa4aMEFCttFb9mS0MJCk0jJOyK4wVyXXdoaOP6hfU7xgholmbXGdKj
IUHrxXVB2CMiqWFzijR0NMRj1Y5MAHWnRqKTDA2N3Zc6mYI9xb+QsypJQ3Gp
htv7sBe3qXZsEKYhj8+9MacoBKxupg8H8tBQvfjylfvYLBsjf3Nz0hD3SaXE
GGxOZso24TUqOmTYKDuHveNfkMj7BSpSkh2330UlQGBJXno/QUV50Gmoir3v
t7fG0WEq6i7J2BuBfXJYPOh8NRUF39CtFqHhfP/ZGttYQkW8PkE3T2Nf6H2S
oZFLRVF2c5+NsTW/1TbrJ1MRlwCLbSS2XotN/0AsFb1w9hv4jH2jgXfy1msq
Eu5bXN+EbVl5m8PGh4qEzl97sYRtU8YpNOtKRedNBPs4xwl4VJR/0NGRivyD
Auii2I55xor/7Kgo3J2/Rg77+Wc2tRdWVMS274i+KrZnRqY+uxn+fcyZ7OvY
fmm6VgEGVCRztrLxNnZQ8qojlxYVLX/c/dEeOzwhxff1f1REetWq4Y6tJy2m
5nSWit7yjaUEYu9EiRxGJ6mo5rx1yBvsocuiLcoyVDSeL8/5HjupPz5ojyQV
zcvtFf2IbXl391XWvVRkU7ShNRv70HIsF0WQiuqNK7bnYxO+OzsbuKmo02Lv
nyLsXL6Y8PRNVLT9EId9KWN9KQK6weuoSEHiWmgZtpLcG76HyxTkP9Z6jWGm
Gt5e7RkKcli7kVuCXaMZEa0wTkEswj0lhdi+w9uNBEcoyHSS1zoXW90uVPhf
LwW575qryMTetrZtcPAbBWWbXapKxSYFBsdXNVCQghlhG4f9ZienWXIlBa0v
rWqKwDb6FLDXt4iCzJiiu19iiyhyjFl/pqC0dI2I59ij9X4pl9MoiH1/GdsD
7A/XN1hKJ1CQanHJYTPse2TvA9ujKCjh1b7NmthzLJ7pPb4UVLEuav4wdmHo
OpsSNwrqPqLLJojtssf9yDtHCvJFQyRWbFZ4nnPLkoJObkF5XTg/6lv+Prpg
SkGW5VVNZdgBRk/lDuhRUFz2bGoiNo+zY+G0KgXZ2SoW38Xu27Dg9A3wfm1b
nb2M/S7y8clcBQoqDFNbkcIWz3tY7rSfgo4+6HKawvkuT9yrYWWnoBXWrdZG
2MvPJ7woq2QkY/bgrBx2+RZr1cZ5MuIxYVnajH1B8k5jMJmMgjqYmYpwfene
vtkuWEtGRRUm2SzYgn8GX/0rI6Mp+RPvOnH9DngYaw3lkdGmf81P3mPfTjDs
Sk4mI89VY7oS9pN+nX5pLzKq8M+QtsD94bWmGvXCOTJy0V728sT9ppyz/1Ku
EhkpqIxcvog91nj/0x45MiKr7DvFgS179pXNXzEyspl8HBmE+1WHTM/cZ3Yy
ukO5e8sf97utPLeZhZvG0KG0oEhj3C/lvy2YvaweQ8YGV9x4sI0D/WoWSsZQ
kIZIahPur5nrM3w60scQ+Wtorhy2+vzsFt+gMTRK/fyHCfdj3253wdlrYwjU
/S887iMgO2y7i6naGLrBVZsvgt2tkfyzRWUM5SuKPG3C/V68vj7+g8wYmpF/
u343dk3h1v3GPGPo75CVajmeD8zRsTINPaPo5FWXtAESns9GRepxJqNINP8p
TzaeR6af9phaXx9FVqaJNMC+sOz3SE5jFLWv2y7WhucX9xuD6CblUcTFtK9n
As+7j50rlAXhUWTmcdJwVxPOBzVlj6v9v5CiQ/AxKzwfFU9UFzHr/0KyBaHN
8YiAFZ4WcXPNEVRs99GPmknADP2SZNmVITTrL5Be5U9A5Pl9Vi4/+tHNb1f+
iOPzjMem1dvX63tQ9jGTnwNqeP+ahbaLFPWgejsDMVvs40EnEDWtB7l4fc5f
u0TANNdjPmf/HnTxxsf8PdgGApN1b6/0ILmde2StVAmQluiTGCF1I8hIsmA7
R0D/+fzxe8Nd6OjmkBdPTxFQwE56LdfRhb489nDlwQ5t+K2yWtWFAqyOt2Yp
EaB6+XBMcFIXKj9Ue3MMn+dytJP+y7nThbQ6b9/RVsTxuhWavjD1HbFVnRVU
USBAzt3G5sUyCX3598XyxlE8HwIGSyInSKhf/2QDC/bM66sbM/pJKJWv99lH
aZwP6ceSustJyJ7556/FIwRI9Mz3HvIgocRE/5QoKdwvj7ie7+YgoajRdpEJ
SVy/P4N3HhLuRE6bF2NbxfG8ozBZn+HsRFGEfIErduXMgwLdtQ40MJW0/yj2
8w3amu7DHWjwrjpnhBiedzL8vl3JHcii3njOdB8Bky/jZ92kOlB/jKPURlEC
Oo9/bvwO39CJvuaIGHzelbJqe5py5BvSK/pFvob9MmrqkMPubyjbMi9uA/bp
5QPB/Gvt6MWg+0WHnXg9Je+1DMvb0UTMrSf6QnheKIf3Dym1o8gsHuWjAvh+
fKf7ux+1ovht/0lJ8eD9oh0EJ61WlH+7yOL3Dnw/l+4kCMq0ojHpyyx52Poc
QxY3ZlpQuLaH3Sls2aBv0yN2LWhWVneb1nYCxsNymabvN6OOL9nqr7gI0Ilz
3sdq2YiWV2Kb9fD5PTqPhb39UiNqMSmrlsQeaAqgxUg2IinV1a1rW/B8WXyX
KUNvQDHml1NTsF2uVR+/9aQBzYwPNS9txvOIZfPlKs96dPeKeHsWBwE0gYgj
Qbfr0VJqMJsvtpT0Lm6Di/XImuIWbIpdaCTd/ZujHgWaqrzhxm7K0765J6wO
1Y3xujlvwvG/E/vYLaEWzTxYeaa/EZ/Pn4vrqXvUoiE2iVp5bJfwLEV+i1qU
3Vd6Ywc2W2XlWpZELUpYOOfcvgH3P0Gy32DWVzQXX2Smjn2mWeqdcnkNmjnT
Vq6Jn1+8RwrcNsXXoLCHpBFZ7MbF07e63GuQYUaMJh+2tpiWhM35GmSmaL/j
Jxte/3OHnNjmauTa85/gPewQ6Yrav31V6Ftq/VzkegLaXiXaQXEVarn6O9oF
m3PWW/BFVBW6nnE44ia2f95lG3a9KtTw1d7zELa34g8e7u+VKH1Z4FwtK17P
uXnz/W0VyHxIeW4DdklyL6d1ZgX6kW+UNYOfv5bZygrTAytQq7VXYT+2Q4PH
5mPqFajnsOGXz9i/3opaOoUitOXVBzDBbs3WY0vyLkMKV3q069fh/vlot8GB
82XIM6iuPB+7QY6ckclShvrTlmyTsWuKH+kUuZUi0maDFA/sopqgpFbnEsR0
Tk33LLa8j86i1okSlGEZPiWDnXtpp3rvQjEqHrCv34ed2Zo2+8u+GP1j3qHK
jp3UU6OyZFOENA+YGLTh50nRGP/Xzw8XIROZP0xV2HE3NMdZJguRlNQ5Si52
9MjgK06rQrTp89YHMdghk8tDe28VoIKRc3fvYnNmVcqm7SlADo3BzKbY/g98
faWG8tGXTV6d2tje8zzSJ27ko8LXehKA/ZTpqOuV63nI03bAmxd7A+WcHhtf
HtrAJsu/BTu8Re9oeVcuMhWbG2DBTo92+3VYNxeJXErcNIOfh/tl21W36HxB
3k93N7djWwqNinzd8QXxVUkv12PPMS8uuZByUP9JR/1K7C1tu9MntXKQSZV7
Wg62spXttmbNz+i/yVNukdiNGh40D+7PiCiqkXiFrSsfWXWyIxstv9u1+hLb
lgXZf7qWjWIlNx92xV6hdVy+xZWNsk4893LC5kxouSz/Pgt9lXTbYI8NJ4Vz
eBIyUbcV1d8KW2/DeXMvkUx0T2a/vzm23fd7vH/iMtDIj5QcE+x421Jn0rt0
9Ogdl6Mu9rokw7Nhbz+iwgMbm89jCz7w+LNu50fEqV//9wy2jPKn1IcxaWgd
YrumjG3es8yhGf0BqcmG3lTAdkkWLa8U+IDuU5N3ymKHP1SzOxqVijx31i5K
Y3/dHE3a9iYFCe74zCWJPdBb6e3Gl4JY3ZQuS2DPp9COE6+T0cNSnVQxxv8P
Z07EtkUkIZ+Cj7kijP3jvKkBPEmoUzjh9i7s6z98mbPCE1FaYrTsTmzfxz0W
QWHvkT4fqyg/Y30qTPyr3O/RdKrEaV7soq0SjfdDE9C52CKHHdgd/RouP7kS
kPztrfXc2ONpDlKXX8Ujy2x3aS7GfjjEDZVui0cHLO9kb8WW8w0S0xeJQ/qF
vKqc2K9LD0/z7YpFH9fvz+fArtV9prmw8y0yD5EO3IS9QDTndwnFIN9WbceN
2BL+O4XyBaORjCj5yQZGfMTuuUYIRCF7SXlfdmw/VPLLnv8NOl4f8YkNu1if
46I2XySS2qEztJ5xf7MG6TK8r1G+ZbUYw0JBH7dt54lAjUZHnrJil5NMHC6I
hSMTLTKNBdtUiGfASS4Mfc/Qt2B4nVnjuYzzoYhavDC5Djvpg+unIZ1XaIu8
lBvDF+iy3DtuhyAzVetdDLffJf0OmgxCSR78dczYO5aU0Z/NgWjfZJITw3re
aQFGh/1R6bSzHMNvt+8wqL7shyot1i8z/j8ain++/6CND2J9k1nL8D4p2lxI
kBcqPD4UzbBViVbVQqYHenqH5QnDmRfLg43b3JFKttt1hkc/XSt+OeiKdDkq
lBm+VyuuoyfigjR+Skgy/GdohS520xFxLOzZyfDzlfaXswn2KC2Ci4thNt4U
scoRO+RjdmMjw8I3592EVa3RiUfWrAxLvY7PL6w3Q/6XYpkZ9lz3YauTiTKS
u8vCxLCg5P2x3Ju6oBt2dW1tjQ4upptPQZYZGFS3/mXYWtKMPemwNWzSll9g
+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
Mq4BbmWF0PGDEZBdy7Kjohrgf8JaQr0=
          "]]}, Annotation[#, "Charting`Private`Tag$9176#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwV12c8lW8fAHCVNIwGkhklIUnZop8QUuGvaEnLSimVBnoqI6NFSErJSkgS
GoRLSLKyznKOY89szn2GcZ6rVz7fF/dxjd+6lM5ednBbLCAgUL1IQODf358u
Sh18/jgquF9tGFAzCSqE7oEbnHEU53I1radhEsIf2xSOTIyjyk/bmPtaJuFA
8bUYWtc4atyoXLaKMQnN0lVW+RXjqChvg1Xg6CR0tnrluoeNo4nk+szZVVMw
Z1MQWC82jjTu9i21PzQFOvpWygnyYyhrt7BBRMsUmKI1HSlrR9AU6/X78rpp
2J70LtFBfRjpmOeskoiZAZ1XdjmUjcPId35FcPuzGTCKZ5c4yw6j0h/rRd/G
z4BllFW7u8gwaraOcddMnAHnewOyAWNDaOU1ir565gyEn97yIjVvCNVYX39Z
VToD3YrvYmaMsAP/xMUOzkBscnp43P5BJHDRbONzPRYc1dps42c+iCz83vNk
DFkgh1KFnXcNohvtW9+/2sWCNEbSE6Wtgyhp7eq4F6YsKJBKiM1eOYgGlxUk
+tmwoPVxZFL57wFEZVBJzSdZIOl/69uY1QAS2izycSSIBW3L2X5NMIBkvBMd
NO6zIPH59V0F+gNocL82/XwYC1Q+Xy312zKACnQXv2Y+ZIHexMVKwWUDqPVp
0FhOLAuc3M80ylT1ozb125v+vmVBnIPNoKVFP0pvrc5orWJBqRhjX4FxPyqT
SK37WM2Cvhrv90q6/cjJ1UIlooYFOuZPL81t7kdmxhq39RpY0KxNnfm0rB99
kfrxPYDEglWS7ovka/uQ14/AltweFoRTAmWm/+tDQkuufPq1wILcGPHbp236
0E79KS0vAQIodm/b6836UGl90cTKxQSoVFcnZWj3ISeNqzutlhJQ+W3VFhfJ
PrSSk/krS5iARS9fa/+m9qIZ0bIghfUE+DsXHnhzqhflOcWHFW0n4PR7pdNe
R3pRwYl8IYsdBFjyIq7p2vUid+GjIbU7CVgbf/xl7e5eFL9h+HarLgFZLbMD
bPleFCfSc6lhFwFtNruD7Rk9KCj4a/5ZKwKMDCsKFx3rQXGGHh9WnSRAMXxr
fZ19D6rZ2FN3zIUAIUpM53PrHlTubMlJPkVAs6/rMk0D7JuXfDXOEuCVu9Tx
uFQPst/FFlX3IODlFuuJPFI30gn231TtQ8CsZL2Kq0M3SvGqrIwOIuDsio4H
jjbdSI8ZZPcymICauYkxS7NuVFUruzQpBH/fI/FVbWc3yvhzZeptKF7fJ2er
8TXdSCYOdSY8IODWgREP/6YuVM3zctWKJqATFmov/O5CFlO762RiCLDWXq11
8kcXYtuaui2JJWC9jA4HPnWhqqlTGn+eEfB1ICB86dMuVMjfJPPfCwKIIOHM
KPsuxBG2rlt4Q4DLDXnRIOsu1G90+kZdEgFV57dfuWbahXYXcY7EJxMQZ3/I
0EmrCy13gwr1VAJ0FRJ+y67uQtGhOnuN0gnwLVQfTv/TiZ6QLe0EswlgZBvb
xv/qRD4TTUmfsS2SbPMiUCdi79XScvtAgETYVf+LHztRpcvsCpRDQP7hopU7
IzsR7yyj4OQnAqbG920tse1EndEOplZfCChdfXm7oVUnej7kl9KMHbEjVvsz
dKKksPNBzl/x/V1j7vqg1Ylc1w0XX/hGwEHi6oHXaztR98CFzbeKCPiPq0/n
ZXcgsbSDIvtKCRg0CuqZet2BhMVuXSnGvnO77u/wkw5km/fomCYiIJt/eq7N
pwOdUynJFy0jYLnQA/nvOh2It1nvRdEPvJ61jFMBxUxkUHfOp76SAMfDKp7X
PjBR+a1cdbWfBIw88/G5kMhE4Q4rvIOxpaWXBp64x0RBK1Ufalfh89qgmbLL
gomOsyT0gn4RIHzmVpa2LhMN+pYaNmOnpJTnbVVhIg3ZpdWK1QT82XykQnY5
E0UdzbtfiK2uca93trYdsfhhT2i/CfjhXTMyXdyOjiqsm5CvIeDoRwnW3w/t
aNi5mXka+/7OzKWMyHbk/FXerRu706BZpfhQO3ppMyvfWkvATX+57QUW7eht
C2tSpI4AsWJ3/WzddnT8xkdHC2xjmLV6JdWO7tzPqM/Bfr5X+fxtOgN1aH8I
v1qP8y1blrS9loHeR51MT8UuFRff01PEQKdBel0Ldn/XImmblww07+44qtFA
AM+aGzIfwUCbbd45HsEWzZ2YyPVjoJxD79bcw9a501EtdYyBzuccDq3Dtu4j
69RaMxDpfAtMYDsfaEi6Y8BAioqptmv/EBAsU3KrT4qBav+jev+HHRdY0Bu/
jIHc9VfdvYSdNfje/gCbjpxHDAcisJu/vFTNJ9NRXbxo6XfsfvnoWPcqOgrh
hW1rxuaFRAjIfKEjMYEXrH5ssZF7F+vf0tEjl8x1PGylQ7eo957RkXSt0lPh
RrzeossWOvfpiMLzcpPFtlbyyB3wpaPulNEYNWzncBe5BFc6On5rrbwets+4
Y7jtYTpy0TJbtAc7xOngzCILOlp5r8/UBvt5icXpz9p0FCjnxvgPO0vZuM5z
Ex11FKm1HsEufahtICdOR2arX6k6YzdPqaf9WYz306Tc5oLdf2zj6uCpNhRX
oDF0CptXJn1br7sNVXrLOf2zqOqawaGmNnQlz1npJLZi5PLDr3+0oTJ9p/3H
/u2H4CP7T22oNu9K66F/+znJ3iqY3IYKqFIlB/7tp3Ls+dco/Psun5Za/NvP
1v4lF+61oVhueo4hdnB0+2UFnzZU43Lm2zbsOG4rvelUGzpqvm+T4r/9nK6z
um/Xhk44/xpf/W8/vyryDaANzbhYKAj824/m9w0jmm3IVEDt4+i/+3mW9/CN
Qhs6xWpPoWFz5zLZDmJt6OJ0LbcCW8Q1+ZzQAg09+HiiIBtbsTb+T+EoDZGY
rOYYbOsXYe8U62nI58KIyUlsZ4G74q3FNMTfKfMQsH08btwNy6YhXTOWiSL2
c123I2MPaUhKxInMwPGW9cq5IjmAhgR2fCj+hl265PB2xws0JHL18MoY7P4m
s2XFNjQkJK/XbvYvvg2Mrl02oiGdyT3n1v+L76QdHRvV8fdfTB1GcD7oXFL8
GrGChkb6Ci9GYgevXHA/Uk1FPjlib8pxfrnUyYorFlIROaVJMxLb4IkhGsyk
onDvdy7HscfWXJfyf0hFw/s634zg/D0uPfLrlS0VnQ2gfhLA1qWv8HUDKuq+
E7y/HOf76tdbFDW1qKinczgsCPun4rlbaA0VBYWYDy/g+qGl2qba3UpB4+ne
LgO4vggPs1uzflKQ1uwBqUTs/veSgde+UJCqXvT1Q9gJ2/+jCcZT0GHl1E1F
uF4J6VdHbDlBQUd2a9ndxPWNsffL8MUuMuq0DdL8VIH7z7LWON1mMkpa8dHN
ATv696TZQjkZ3fkeazVVToDVwW0JkWlk9K26Q0QTO+9w2v48DzJq7PuZ/gzX
3/Bz0dnsURJyX33y7OYSAs5tzj1axiShvQbLvT8VE7B7oF4w4g8JffBAW4yx
p71WnJT5REL6yek5B7/j87x6T9TEl4RG6JnCZwrx+QReuhTEa0VpjmIH933G
/ehRx/fnf1tR1LUInYoC3H/i7Fd8YLSiJzfMmbuwc7J3plFKW9Fqg89+avkE
qFIJmkZwK7LkO9FYuQTIbb+7lyLciqrsGgIP4X4n2B4ppyHfgpSCz2QqpxDQ
PSDgtUesBV013OV7E/fTH1NXvjrxm5GNvrPwb9xv7yw/7BDY1Yy6JT+/8cT9
mKO9Ppz8thkxCyLOv3iF+8mDpOl7ms3IeCv31484AloMPtWQoAklBld1bcfz
geb5PwHp25tQjYBRs00EAQ9ejGrc3NCEPpuYubqGE2DKU4tcz29EKSvfX4rB
80XO95RDJ0obUUOAhGoXnk8idscyOo0bkYP4bOiuALye8DEG5VoDMiYXlo95
4fMaUge/Qw3IaMg9m3ker2efR7KMdgNqPO5nUe9JwDHhTreTU/UoztszMN0d
x/eTprFun3r0iPHWcB+el4ZjCgTGvOvQKgOHebtjuF++8VcW9KxB4Wnib9ws
8fzzecmyxn01SKOzTHHPXgKYtY+GErbWoPMHk8NkLQjw5CTmaI//Rgud1kL1
ewi4/V+FwbkbvxFt2LZxowkBaUtEDpaHVKPogHWdL7Tx/Xm8vn4vuQrd2hij
+20DAVFaZVVzbeVobg1M/JphwZ+nqT5QVI4MJKZ5ptMsEJsOlQl6UY6motqb
vk2y4OHng5eWHS1HY5YLfWljLAg1okuuJf1AL8uW518aZMFtC8J1y58yNFy1
1uQ3nQUNuUeF0kJLkPKiIParHywIENhx1/bIZ5RhKGhEjmCB7JOs1eKSz1DD
I/enX1axIKd3UfKKy6kQm2IhPhQ5A3bCy74NcwpBi6k7kMyehheaL4zDoysB
SAOk1S7TICX9ynKopg4O8Si9ldlTwDT9X8vtS80wPF9TuIc1CRcrJHk6O8nw
ULr81zLzSSjrd9WVsGqDckHPc1kBE2B3VN4jdR0TyNHBrc7+4+BXuWjj/aFO
+F3PPXWKPwrbtjXKHJjohiPt05VLzozAgnGL2IXWXhhs1E5fxxyGna93PJbv
6ofz1KvhT02GYIKh0rWrdxCKpDYPZ2QNQF2FvVZe5TCY/+hMFdzVD8KzpBXF
9SMQktB/f++3XvCgRTLlC8bgQMhDZYuTPZC+36fyuvUE+ATPabat74ZahyoX
lf2TwDr+W8SzvhPufvhCBBlPATWzieXt3AGuua2H1MymoZFMRAgptwNV6HFO
gN4MJNyVODS0jw6Tkql/DI1m4OHcbw8Zczqs3Fw4wTaZgbbWelk7YzoYm/ft
9N07A4NVze4VmnR4c9fk68XDM7Btzj6bIk4Hd84oOnl1BnSFpNfkMttgZsi2
CXJmoPJylpLazTZYU796ZokKC84cPn8yOJ8GNdG7jMXVWVCMDu3f8oEGIUfd
QzZqsmD3YAf9TzoNOD3fJfbgd+OMvtNfzZc0YPLcde9YsiDTYvmkciANslVL
bnDc8bvu3eiiKTsaWIac5468w3GmJfNYdpIKAjaxe+bes+AJKp50+kuFolUo
QjiXBTf2/tJ43keFbQkSMurfWCA//0hDpY0KEnnIyAO/6yyeqN67U0GFrg7J
2104Tjm1wt3Sz6lwe1f5AkkN96XDHT1CZlQI8eoh3mwjoNVAaLGBCRUevRAc
P4/fVVd6B4O9Dajwim3ZMW+A63SA8rc+TSp8z69Fm60JEBDat0xYjgq8raR7
13GeP7s87K7OpsAtucHFkvhd4PLl7emfuRS4t3/FLBO/CxzMcoLuZ1Mg3F99
OiML9xl6xE6bDArEUy/2GOcRcEBu3rTrDQW+xk5WuOK5+olBhollJAUIkdmQ
gg5ct0ryGSOXKHB9XnTZYTk2KK3/2v95BwUUesxVLiuyofkFfej7NgpUVfvt
faDMhujFb27+UqPA+ti+4DINNqyKKzAcV6JAkXqJwDYTNkht4IYGrqWAwNGL
vKUubPCPaCvOmyHDg7ya0a9v2NBj+uzgoRIyaMcLiLaksuEXs7VbtIgMjP/p
aYy9Y8PLGnODhi9k2LYvxUs5lw398WfUT+eSobHDbyCqjA3rvQKO/04lg6So
Wtf5LjbIfpQ5k/eQDEkeYa2ymzjQb5GIhk+RYXmAZ+2mLRzwbW9zvXiSDD5P
9pVv3coB+9z86unjZIDPwrm7tDkgKxLVLO5EBubiqIcnzDlwq+Gg7IsDZJBL
jDdLOMeB1DUfewqNyBDyyc8w1YMDfJVKrXgDMoxUHtd6f4EDN2LqHW/rkeH7
XzmF79c4MHJLXNMJ14njhsnctmAOOGX8NLdXJ0N8a2auTBoH7mk8cz8lSwaB
wQfvNmZwIO2h4GSCNBk8Zy8kqmfjJ6VL2UWmFBn0N2o+MirgQKnHtd3XJchA
vpzncbySA+sMlG4Oi5Jhd3CMy9lqDnA8bb85iZAhPc7X0auOAxpyvuzqlWS4
XqJn7t/KgfLV/OtoGRkkhL8rvOzlwGI376SZRWS4rfBKMmWQA91t3+ajBMjQ
u+N/IlkjHLjTleGmzSdB/lHgFc7g/5dRd+LBHAkc0itINEEu6B/8n2ggmwRF
hWl1Xcu54BhgNXKQIMHG+vsVQyJciLE+263IIsHktNUnrgQXsn51yNCmSBC1
p+6R9GYuZDw4PBQ9RgLL0lRthioXEhSppORREswZBbQlanBBzHabzJcREnjq
qKsq63BhudSVj2PDJDDdEl6hac4FU8JFK2mABETqKa9JSy7sbL/Mp/WTIFtR
f02BDReqsxK0pLHXy/S7GDpw4UayZ+m7XhJMiFjwzM9wofEp9f3SbhKkR8gm
C7lxYcDsx0evLhI4C01b/fbE36uJKZI6SVDNT35m68MFX1OuTVEHCb9f/YzX
+HJhRaXacl1sHa59T8tNLswq9+h9ZpIgaYqvdewuF4JUJMd+tpPA6TKFIhvM
hU4ZRT8nbJGRnDvMUC5si6X6jzBIUO4Zujn5ARcOFIfNhGHf6jtZd+4JFxRL
bgyoYmue1b2mEs2F6LKxw3/oJOhlisgMPeNC8ITB7gBsO+p3j0uvuXDzf54R
PW0kEHSMEduRzAUzzc7RN9hFTV6fp9O4oJRv23IG28fWzPlLBhcI3XkjNWyV
WuklftlcSO/UUSFoJGBYTWbuyuWCVPvuuGrs6Mpq+4V8Lmg4uj5Kwrbek8Qu
+8qFmqtjK+5gL5TcTAz+zgXyKZXVZ7ALjOz2WiIuaFs6Ju3D9vqqMrK8Ap+n
XeV3fWxFnYXo2iou+KcXn9uKTc4lGT6p4YK6b9gLZexH2z502jdwobTb22UT
tllWSJh4MxcU5Arzt2BzVJw1ySQuqNrkvdyBnZOqTYqncaEqLkViD7arovDt
E+1cYGxt2eiELfO6e6NCFz5f7cdVPtiN0kW/O3vxfZGlFz3FDo176pM6iOPB
tLzlC7ax+Hkp9xEufHz5B7qxpyJNS1Un8HrFHlqK4/PKEFnv9neaC+urTIb2
YbtEjAvnsLlw8a+WWii2hNCvPJ9ZLjhnfFhWjV0TlHhMm8+FBpX5+6vwfd3j
XxcgFvMgNcrzrTO23u2D774J8aBslaHHR+wRjrJtwEoeiDZ8rVuG7z/l+tyM
iRgPvFjbKG7YYpffm+ERBCZVNnfuxPHklvJ8NUWaB2t2rL37HruYFMwcludB
+Irlv9RxPJ43dvZfq8KD0revjprgeC27bG2tos6DpMygt43Y61J11hlp8kB+
jp/sheO9coVo3hk9HuiK2uXm4XyQNeHevW7Egwlhz5+ncb5c9ek7GLGbB5G0
9CjJHhJsoJQM5Vry4NsZZfsYnF/+aZeUBI7w4OM7weQOnJ9NlOPj4id4cPHN
jmcVgyRQFbYq2XKKB8/dkw/kDJGAdGXDMTsPHtzroQjH/yWBFjRGJd7kQbR0
KLd4nARhV4td8gJ4UCD2UZcyQQLm2wyNqrs8aG7RN+NMkuChSGD1aBgPLG3Z
zbYzJOin7RAwieeBUKj4IlsuCUxEFRrsX/Fg5rbiWCKPBLGmK1+5JuH1WGR9
I2ZJsOddt/6jDB7o/ywfKVogwSvfmMv0bzzYvXp04ZkgGabf3TUZL+aBi2jV
UgUhMtjQLwgv+YHXRzdgZ+N6yt5j8U79Nw8CL/gndeB667CKxfSj8cCD7mAU
v4YMmWZd2Y/beSDX01FxRBzX+xv1/sldPPAt3rRXQZIMHxhv1/0e4oGDq4tu
2Xrcr7KcbNfzeJC98j7viCIZSi2+lXyRmYXdPypCqVpkONf1ctd9hVkQ22A7
0o37y/I7/ys8tHEW1pw4EDCtg///V7PPE2qz0GnOk9liSIZ+tfpsdcNZmMj3
DaXuIYPYqu6ExCOzUD6QZeB2mAz57yulvU/Mwk6zIFIz7n9Hrd8933VqFiJb
lD9ZHiNDSuDFGKr7LBhfUVLf40IGvRniwdobsxB97T/rQE8yuNCE/UNjZ8H6
0qHT2++QYcmNMfbh+FlosB+NWBRIhoy1Tdc3vZoFTnnmsrZgMkztj7tSljoL
LhqdgokRZAgtVTzPy8PrGUvYevUZGeez7tFLTbPQIbzO8UAOGea9T+k5ic1B
1M39l5p6yXDWYPThmrVz0Fii6OEySIaqxQFddZJzkHROMHHyLxmePI97ZC4/
B0cy52vUp8mg8KO+W0sDfy83aDG4iAK7JYwjhW3mQDJRrjlKkQJ3i9YPlt2f
g9iRJQrJZynQG5JucjtiDsCNbcVxp4C1nU6M/uM5cFivRXW8QIHVvXa7c2Ln
YN2KW1rKvhRIEg2LTUidg0CJ6B7RUAqUnWaZ3vgxB+SGS97r3lNg0bLmF1vn
5+BNbg1dkEcBoXDfdQaL5sHXZUNEAp8CK1dIxVgsnYfd005jhkvxfCns/Oik
6Dxst2jrf7yaCqqr+u9EymOnKZVEb6GCrRTv3LTJPMyc1XFfcwTPj1s2an6/
Mw+Zolf7R79TITmjMutX0DwoCm7PvlNOhXQ1jy2tofNQ5Kt+Uuo3FT5uzVYc
fTIPZD3rsNNkKpRv1xPf8GYejpxapeaA5+EhfRtOEJqHn1YHVxao0kDP+mq5
jcAC2GVE3v3faxpE7BQeXyO4AMpn5WYfpdGAIZcmS1u2ALwlN8JT39MgaJLk
67FqARQO/GrvK6RBw0vDLSEKC+Cw1O05ItPAY1TgUYnxAqi3vvWqXtMG8dGR
jlp+C/A+Y3GeweM24DGyByWnFuCd05Eaxgs6WFysjjpILEB3jObdilQ6PJ7t
MbjPW4Dw1KsX8j/QQVFGNmJmMR/+fAqazPlBB6sjEWot4nxIbHzULzFMh9gm
N68oXT7s25ewMtGYAZpVCiMr/fjg93Xn6KdBBtxyNIo1+x8fVM2Pi1dMM+BH
r6OxfyAfLE/xstoXGHB4yeNHQxF8uFfWp7tdsh0CTGc1ql/y4Yy39qi5WTtU
F1G87xfzoShl7qZuYjustZmWLCnjQ43JsUhmZjs408RKZyr5YGGto/v0czuM
s/eKudbj39/0Tlu8vh3W6RbkmDH5UKpvo/lgrh1OV/5x8u/mQ0is68jd5UzI
PPR34VM/H/Ts71ndlWCC8dWNdkrjfFBznqe/1GBC6KLd7KPTfDjoyV//1YCJ
q+exN1FsPijtt+AxLJggo3jdqnqWDzFnXwWK/MeEcx+jxvl8PsSKUHP3nmTC
/wEiv1pg
          "]]}, Annotation[#, "Charting`Private`Tag$9176#2"]& ]}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0.2000000107755106}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0.2000000107755106}, 
     DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{-1, 2}, {0.2000000107755106, 1.4258727177032475`}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       RowBox[{"f", "(", "x", ")"}], 
       RowBox[{"T3v2", "(", "x", ")"}]}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               TagBox[#, HoldForm], ",", 
               TagBox[#2, HoldForm]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.7331434609837756`*^9},ExpressionUUID->"b001d23b-7d7f-4fb3-abf1-\
36c70cdb5317"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Clear", "[", 
  RowBox[{"f", ",", "x", ",", "T3", ",", "T3v2"}], "]"}]], "Input",
 CellChangeTimes->{{3.7331435515431623`*^9, 
  3.7331435619598927`*^9}},ExpressionUUID->"cf3a9749-35f5-45b5-8e09-\
52677b174f98"],

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "[", "x_", "]"}], ":=", 
  RowBox[{"1", "/", 
   RowBox[{"(", 
    RowBox[{"Sqrt", "[", 
     RowBox[{
      RowBox[{"x", "^", "4"}], "+", 
      RowBox[{"x", "^", "3"}], "+", "1"}], "]"}], ")"}]}]}]], "Input",Expressi\
onUUID->"d217aada-facd-46db-8e43-df1df0115ebb"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Function", "[", 
  RowBox[{"x", ",", 
   FractionBox["1", 
    SqrtBox[
     RowBox[{
      SuperscriptBox["x", "4"], "+", 
      SuperscriptBox["x", "3"], "+", "1"}]]]}], "]"}]], "Input",
 NumberMarks->False,ExpressionUUID->"a7831f21-77b3-4b25-9685-153073bba571"],

Cell[BoxData[
 RowBox[{"Function", "[", 
  RowBox[{"x", ",", 
   FractionBox["1", 
    SqrtBox[
     RowBox[{
      SuperscriptBox["x", "4"], "+", 
      SuperscriptBox["x", "3"], "+", "1"}]]]}], "]"}]], "Output",
 CellChangeTimes->{
  3.7331435834592276`*^9},ExpressionUUID->"62f351f5-87d0-4e2f-9a86-\
91bb533ce99c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"T3", "[", "x_", "]"}], "=", 
  RowBox[{
   RowBox[{"Series", "[", 
    RowBox[{
     RowBox[{"f", "[", "x", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "1"}], ",", "3"}], "}"}]}], "]"}], "//", 
   "Normal"}]}]], "Input",
 CellChangeTimes->{{3.7331436100079627`*^9, 
  3.7331436138893003`*^9}},ExpressionUUID->"6288f421-de52-4c70-b6fd-\
a65ec33295b3"],

Cell[BoxData[
 RowBox[{"1", "+", 
  FractionBox[
   RowBox[{"1", "+", "x"}], "2"], "-", 
  RowBox[{
   FractionBox["9", "8"], " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"1", "+", "x"}], ")"}], "2"]}], "-", 
  RowBox[{
   FractionBox["7", "16"], " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"1", "+", "x"}], ")"}], "3"]}]}]], "Output",
 CellChangeTimes->{3.733143616856208*^9, 
  3.733143651887587*^9},ExpressionUUID->"d3fa5270-b936-450a-ad55-\
865b85786f01"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"T5", "[", "x_", "]"}], "=", 
  RowBox[{
   RowBox[{"Series", "[", 
    RowBox[{
     RowBox[{"f", "[", "x", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "1"}], ",", "5"}], "}"}]}], "]"}], "//", 
   "Normal"}]}]], "Input",
 CellChangeTimes->{{3.733143631201458*^9, 
  3.7331436476322355`*^9}},ExpressionUUID->"335e01dd-155b-456a-9bad-\
13f1fbc1b5b6"],

Cell[BoxData[
 RowBox[{"1", "+", 
  FractionBox[
   RowBox[{"1", "+", "x"}], "2"], "-", 
  RowBox[{
   FractionBox["9", "8"], " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"1", "+", "x"}], ")"}], "2"]}], "-", 
  RowBox[{
   FractionBox["7", "16"], " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"1", "+", "x"}], ")"}], "3"]}], "+", 
  RowBox[{
   FractionBox["331", "128"], " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"1", "+", "x"}], ")"}], "4"]}], "+", 
  RowBox[{
   FractionBox["183", "256"], " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"1", "+", "x"}], ")"}], "5"]}]}]], "Output",
 CellChangeTimes->{{3.733143632871894*^9, 
  3.733143648989853*^9}},ExpressionUUID->"c068e221-2284-4360-b54d-\
f19d2262ff32"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"T7", "[", "x_", "]"}], "=", 
  RowBox[{
   RowBox[{"Series", "[", 
    RowBox[{
     RowBox[{"f", "[", "x", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "1"}], ",", "7"}], "}"}]}], "]"}], "//", 
   "Normal"}]}]], "Input",
 CellChangeTimes->{{3.733143657944736*^9, 
  3.7331436624236608`*^9}},ExpressionUUID->"d6de1e2b-004e-4f14-a51b-\
bcb98f79b7bb"],

Cell[BoxData[
 RowBox[{"1", "+", 
  FractionBox[
   RowBox[{"1", "+", "x"}], "2"], "-", 
  RowBox[{
   FractionBox["9", "8"], " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"1", "+", "x"}], ")"}], "2"]}], "-", 
  RowBox[{
   FractionBox["7", "16"], " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"1", "+", "x"}], ")"}], "3"]}], "+", 
  RowBox[{
   FractionBox["331", "128"], " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"1", "+", "x"}], ")"}], "4"]}], "+", 
  RowBox[{
   FractionBox["183", "256"], " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"1", "+", "x"}], ")"}], "5"]}], "-", 
  FractionBox[
   RowBox[{"6189", " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "+", "x"}], ")"}], "6"]}], "1024"], "-", 
  FractionBox[
   RowBox[{"2135", " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "+", "x"}], ")"}], "7"]}], "2048"]}]], "Output",
 CellChangeTimes->{
  3.733143662930008*^9},ExpressionUUID->"00e2f494-dc1d-4cfa-8eff-\
1dabf7c40540"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"T9", "[", "x_", "]"}], "=", 
  RowBox[{
   RowBox[{"Series", "[", 
    RowBox[{
     RowBox[{"f", "[", "x", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "1"}], ",", "9"}], "}"}]}], "]"}], "//", 
   "Normal"}]}]], "Input",
 CellChangeTimes->{{3.733143668649252*^9, 
  3.73314367212151*^9}},ExpressionUUID->"8bf5d45c-3231-4438-8f29-\
0a1e142926da"],

Cell[BoxData[
 RowBox[{"1", "+", 
  FractionBox[
   RowBox[{"1", "+", "x"}], "2"], "-", 
  RowBox[{
   FractionBox["9", "8"], " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"1", "+", "x"}], ")"}], "2"]}], "-", 
  RowBox[{
   FractionBox["7", "16"], " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"1", "+", "x"}], ")"}], "3"]}], "+", 
  RowBox[{
   FractionBox["331", "128"], " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"1", "+", "x"}], ")"}], "4"]}], "+", 
  RowBox[{
   FractionBox["183", "256"], " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"1", "+", "x"}], ")"}], "5"]}], "-", 
  FractionBox[
   RowBox[{"6189", " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "+", "x"}], ")"}], "6"]}], "1024"], "-", 
  FractionBox[
   RowBox[{"2135", " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "+", "x"}], ")"}], "7"]}], "2048"], "+", 
  FractionBox[
   RowBox[{"481395", " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "+", "x"}], ")"}], "8"]}], "32768"], "+", 
  FractionBox[
   RowBox[{"64811", " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "+", "x"}], ")"}], "9"]}], "65536"]}]], "Output",
 CellChangeTimes->{
  3.7331436731542587`*^9},ExpressionUUID->"aadf9b2c-0d40-4286-8373-\
f721e2eeafd3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"f", "[", "x", "]"}], ",", 
     RowBox[{"T3", "[", "x", "]"}], ",", 
     RowBox[{"T5", "[", "x", "]"}], ",", 
     RowBox[{"T7", "[", "x", "]"}], ",", 
     RowBox[{"T9", "[", "x", "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", "\"\<Expressions\>\""}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "1"}], ",", "2"}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.733143681133526*^9, 
  3.7331437456655235`*^9}},ExpressionUUID->"3735f301-59d4-423d-a38f-\
f3832b173c76"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
Kvgf3CulFQ==
          "]]}, Annotation[#, "Charting`Private`Tag$13876#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
BiTn+UWa+pcJjCb5a04KrUjo/weG/wJWrLkj
          "]]}, Annotation[#, "Charting`Private`Tag$13876#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
KwOKUeD/fxb/A1KlpUs=
          "]]}, Annotation[#, "Charting`Private`Tag$13876#3"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.922526, 0.385626, 0.209179], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
          "]]}, Annotation[#, "Charting`Private`Tag$13876#4"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.528488, 0.470624, 0.701351], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJw92Xk01N/7APASQiVLlopCq1B2Et2SNoUUkrJHkiyV5YNU9lBJKUUoklRK
KdLy2KnsO9lmvMeMfWZsM2PwvZ3fOT//OK9z73m/7/u5z3Pvc87IO3mddOFZ
smQJLF2y5N//fuGSl6FULiz5v799Ab8NbnB/cqHLZ0e/x415tMWGemrwKxe0
ed5RzmrMo6ah+O0N+Vw4V5KetpvGRcqCRGNGDhdYL6+9KbDgItLhmM3HHnFh
K9+PR8G6c8i4ou3Xk8tcuM6nE6miyEazFjdTw9y4sLEk0GdqmIUyCcWrl525
cI3SrRn5joUWl12X2X+GC/1yX5lLtVgo33CTF82IC8+UXFbLm8wi2WKvNToy
XLgX6vefYfo0qhHTuqYnxYXk1x7XSj2nUaALp9lAjAuRH544UA2mUZtQxAMj
AS6QNv2nt7Z3CsVbPhU7OTUHA9svLh/fMoWWjZSLXK6ZA3JjZDa9kYk+GsR4
e1fNgVTJ+FfOayZyiDdruFo6B7pL/66PD2Wi71pd9wIL5+D4qAVhpcVEfjcn
hKMz58DQ5dwvpecMNCSxblVG8Bysk/H9XBBPR0lufR5Z/nPwwvV3/x9vOjr0
LbPm9ZU5SO1bu9nSnI5eOOyK++A2B9dks5tKxOno3BujFT8t5kBE5NbOkj0T
SGhB8FKJ2Ry0B/penOKZQF9P1P8uN56DpxUt4/O/x5HkzJmYP/vmoKD9h0WM
7Tiq3+cl2Kk8B9/W8qkcjhtDIQ80L3ZvmwOZfR/UR86MIeVBdnWfwhzwdxqu
PLV9DEXHhkcPSs9BzVMtN5eqUWTY9mT5FO8cJHlLKloLj6LPl8r5VvdwoOnG
qNCLH8NIV85TLaudA1nbTY7qPxhGRS1StgZNHPjy/dRi4sVhVGxwKf9SFQc6
QleqhkgPo9+rxZyr8zjw5P1wel/IEDIp/3bX/i0Hpu6GuGvYDKGGAJeimSwO
pNZ3CGtqD6FWUqHolhQOnNPSEdWg01D/J/viW5Ec8F2ZdWXkEg05uQmOSt/i
AKvm97mLx2mIIvNJ6kMQB5o9loiGqdDQcAS/V683BxKsJOEWg4qmT7+T3XOW
A2RJgfJrN6lIiMsJnNrFgcGlp2SjCwfRnQ+ZWbE78Pr2Bhz9+3wQibiYNils
4UD2j2M2b2MHkUTdc0XzdRzQy+m4UOIwiOTSj3S84+WA5HvWTLTIIHphwVx2
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
PDr2h46ECqTEVzkMgMvF4Mq/+Lw3E9her205AO+XmLmHYT88oxvrYDwAS59c
TFfGluVaL8vXHICvLs5C4dW4XvY/nbQRHICIC0TrkSo68k3IeR++QIbyl3FC
i5X4Ph8oupQ7SQZyz4hrAfaByL8DS3vJoN1jQd2JHd0+kqbUTAatFT6a4/j+
qdnOPWtZTYaw+ktz77Gt/si0ZH8kg0d94/E92E9lVOKbXpHB0ohvGR9232WD
49wUMsh/zolpLMfxAROBrQlkMKmO4aRju4nYlZtFkeHYoZqLV7HfOXre/C+Y
DHoZ0xNHsJkfQ/QzfMhw/M54pjy2Nu89Vo0rGeZvLH0+j+/HIMu0/JmzZFh1
rofbjV2c9d5bzpwMiPdxI2DzskDZ+BAZ+BZzdLOwjx5toF3dgy27eCwe++7T
/sxnqmS4t5nYEoLdNEJ3qNpCBv5QKZIXtpTBUlnGOjIcmS9PcsE+d1e0c50I
GTZdi3azx07vk0804iNDzRMvD1tsiqq6uSeHBBHf5or/je8INVyVNEECq5hN
Ya7Yns0nf5UQJJgZsmjwwf602TlipJMEE+V+lbewWb5X90vU43HKcNgjbP2q
sPm95SR42HZv2wfsW9IPv7p9JYF8WWlDHXblxUzfhFwSrDzvmMbEXvEtX+17
BgnSR/98Wo/jdWJlxRgliQRii4M7jbEf2ra+Xn2XBCpZsuoh2J25FJfdYSRw
tnDuK8DesGRG3jmABF40rTOz2E7m/L1xl0mQUJBW+q//GJ3catV/mgQ6oiqT
ndiqB3XEhExIELBfe5k6zhffR4frNAxJcFIz62H8v/yino6x1SFByPj52mns
BV23Q1HKJHiRNtnsiPPxQEwAT548CbJbPOtbsKP/Rv/skiRB1/t4qinOX9GQ
19o7l5LA/3DT6jM4vyO/bK8Wme2HPPT6UR82Z/zVmcnRfvj7QqbHA/c7ZPus
4MKOftgoXqOZguvHKmmLcHJdP1hvOHJnL66v3w2ZadfL+0F1akCDhv1xf0ap
4Yd+UPb4tmheh/uPQAWLLVn90FDo6S1Wj/P543PK8pR+SHytWdmFHbopXaA2
qh9KlaZ/hOH+6CTfM9PT9v0Q8GLF0T24/isNZPp3W/ZDu4fhUYT7Iz2/ZB+Z
Y/1wMTTS/zg+LxSoTx6StPthX7SQcBg+bx5tXLu1XLkfyhzL6t924Xq3TirI
UsDzD9640o/7qcnqR12XhPvhY8vsGld8Xl1YKulhytsPRzeeulqI+6UvV3fM
OU71QXop00sCn2+Rltv2j/7pg6i1yQJ0fB5uWytfuySoD4rn4/aq/LuPYzbS
K1z7ICLUVrRrBOcbR1Y89mQfyBYSsg/G6Ki6e90ZiR19QATHww4Grs/0NRTF
zl7wS9A5McPC+SQqLjBR3gsv7PwkV8zRkW6oqFL+h16g3Hciqczj+/e8sM/e
6F54vNDyX+pSBsrZJjB/UgfPb/3+QH0FAyUk8ctJb+qFDAFH65+rGChQkO9A
j3AvSJ0sl7MRYSDjkaW3Lwz2gMv91ppSCQYayZ1bE5zYAw72QVoO8gzUspGj
s/9WD/xceeTz1c0M9D2eZcN/uQem+GjeT7YxUNyV6fR4ox647lHwS2YnAylr
Tyi/nOwGi8maoBX6DOS688aNrz3dcK3biymwj4HStq5uqq3qhvz/Jn9sMGIg
Mald/jPJ3fDn84WFh8cZaHbWs+SwUTfw+JzYXGjHQKr0BfFzO7thtllRJ9yZ
gdxpd129pbthVWH/eg83BuruyF3xZPQv8OyV0Ll/hYFKv45bDj/8C9IxkRJ7
oxmImxeSvRDyFzxntq6aucNAWjnCc2IX/4LEiGxR7QMGyn66M32PwV/IVt9/
qDeNge4EeQ7HUbpgy+o2oQdfGcjaYDxkl3YXCBSOXK2exPHUCmk8INcFMYHj
73/MMdAfFeHN1kJd4NtrXvp3GRPt3bDz183eTojQTpx9uIaJNi1eFm+K7ISM
UAPWKl0mOjc77zLo3Qk5mRIq5/Yz0aOJO4Ucm05IkaiJ6TBmIoH+d7abdnWC
3qr5B3Z2TDRePPbqWnsHBBX6bs6PYqJtX69zoks6IGUiuz0qgYkc8laZPHvT
AXHOyY/uPWOi5ucqzIobHbD0ULbV3nwmKgy9rC+1vQOWCIUd2EUwUZjRWMPX
gHa4+2mNyzqzSVR6ZNRM07kdAq2ffTOxnURLTEbqck3aQb5hh3PxpUkUbDlU
k6HQDuWiX/Qu3J5Efq6U6js1bbA9Z6KwpWoS5bsThwUK2mDP8AN1mY5JxPQc
qAx93gYLEVpeObRJ5OVPKvf3a4M8318b04SmkFt0T7GjXBtE3l8dyXdyCmXF
daNuoTbwrn6mlHZ+ChHxf39aTbfCeae4H1H+U8jxSef3Y79bwdw6d+po6hSy
yWkt1LrWCgvH60PzJqbQ8ZraD4LVLZCQFmImnDGNYhpqdoV/bIGt5jejN3yb
RtUtf3IXUlrAkBllH988jQ72/Ho76dMC4jsvrEjlm0F7xyuye9a3wLVeg42R
njMomFm+zZq/BZjWz6aqbs+gopmyrCZ6MywevS3s93IG6SyWZFZVNEPIAccc
md4ZpCryMz3Pqxnawz48+GYxizzX/NiobNMMP94/D4+6OoveSn9PzTJqhoDk
LIs/CbNIUb4oJXltM7QIm78pbppFCupfkiLKmiCpzbz2jjULSVjkxp+RagIj
Z/RR5jobfdwaW3RwWRM0ms3sCXvORifYFwi1iUaIXRs+7FbJRjGp8rpCVY1w
IflUXIEoBy3QHvYV+TXCW8uMyNhcDhq8HrRTpq0BTE/AjQs8XBR2wtpaoLQB
iu65Lfjt4iK5TVqhU+8aoFTlStYGWy6yqR5vrYnA899s0jMo4qI6Mafr17Ua
4HSyfyU1aB55mt1P+qFYD+65Ul9CNyyi7Cnj0cSl9aB34d07muUiIj/h3efZ
WQfc10Z1y+4uoiXcwKPOt+v+//e9/wGqIZ7M
          "]]}, Annotation[#, "Charting`Private`Tag$13876#5"]& ]}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
     All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{-1.999999918367347, 1.999999918367347}, {-1, 2}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       RowBox[{"f", "(", "x", ")"}], 
       RowBox[{"T3", "(", "x", ")"}], 
       RowBox[{"T5", "(", "x", ")"}], 
       RowBox[{"T7", "(", "x", ")"}], 
       RowBox[{"T9", "(", "x", ")"}]}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.528488, 0.470624, 0.701351]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               TagBox[#, HoldForm], ",", 
               TagBox[#2, HoldForm], ",", 
               TagBox[#3, HoldForm], ",", 
               TagBox[#4, HoldForm], ",", 
               TagBox[#5, HoldForm]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.7331437468476734`*^9},ExpressionUUID->"c8a8b654-d06b-4529-bf25-\
046ae9fc5cd2"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Clear", "[", 
  RowBox[{"f", ",", "x"}], "]"}]], "Input",
 CellChangeTimes->{{3.7331437948356037`*^9, 
  3.733143797650078*^9}},ExpressionUUID->"cf225be1-5fad-4f94-8d28-\
9cf634d64588"],

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "[", "x_", "]"}], ":=", 
  RowBox[{"x", "*", 
   RowBox[{"Exp", "[", 
    RowBox[{
     RowBox[{"-", "2"}], "x"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.7331438001176825`*^9, 
  3.7331438269140787`*^9}},ExpressionUUID->"4b96055a-15b6-485f-97be-\
451bdb4a7d1c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Function", "[", 
  RowBox[{"x", ",", 
   RowBox[{"x", " ", 
    RowBox[{"Exp", "[", 
     RowBox[{
      RowBox[{"-", "2"}], " ", "x"}], "]"}]}]}], "]"}]], "Input",
 NumberMarks->False,ExpressionUUID->"30a150a3-f11b-474d-8386-1a28914e5f7a"],

Cell[BoxData[
 RowBox[{"Function", "[", 
  RowBox[{"x", ",", 
   RowBox[{"x", " ", 
    RowBox[{"Exp", "[", 
     RowBox[{
      RowBox[{"-", "2"}], " ", "x"}], "]"}]}]}], "]"}]], "Output",
 CellChangeTimes->{
  3.7331438306952224`*^9},ExpressionUUID->"2a9a890a-a501-4e86-bbab-\
be423edd8c13"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TaylorList", "=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"SeriesCoefficient", "[", 
     RowBox[{
      RowBox[{"f", "[", "x", "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", "0", ",", "n"}], "}"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", "0", ",", "10"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.733143835427794*^9, 
  3.7331438812659435`*^9}},ExpressionUUID->"8ec72652-faa3-43a1-88b7-\
318b2aa05534"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", "1", ",", 
   RowBox[{"-", "2"}], ",", "2", ",", 
   RowBox[{"-", 
    FractionBox["4", "3"]}], ",", 
   FractionBox["2", "3"], ",", 
   RowBox[{"-", 
    FractionBox["4", "15"]}], ",", 
   FractionBox["4", "45"], ",", 
   RowBox[{"-", 
    FractionBox["8", "315"]}], ",", 
   FractionBox["2", "315"], ",", 
   RowBox[{"-", 
    FractionBox["4", "2835"]}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.733143882852167*^9},ExpressionUUID->"cf55a240-0a7b-4629-9a96-\
2eee407974d2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"a", "[", "n_", "]"}], "=", 
  RowBox[{"FindSequenceFunction", "[", 
   RowBox[{"TaylorList", ",", "n"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.733143919828721*^9, 
  3.733143936330714*^9}},ExpressionUUID->"efe80f15-d1fe-404a-af31-\
bcc9bdc965bb"],

Cell[BoxData[
 FractionBox[
  RowBox[{
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"-", "1"}], ")"}], "n"], " ", 
   SuperscriptBox["2", 
    RowBox[{
     RowBox[{"-", "2"}], "+", "n"}]]}], 
  RowBox[{"Pochhammer", "[", 
   RowBox[{"1", ",", 
    RowBox[{
     RowBox[{"-", "2"}], "+", "n"}]}], "]"}]]], "Output",
 CellChangeTimes->{
  3.733143937296278*^9},ExpressionUUID->"a60c3e05-aecc-4d0a-9142-\
af8f80e63be9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SumConvergence", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"a", "[", "n", "]"}], 
    RowBox[{"x", "^", "n"}]}], ",", "n"}], "]"}]], "Input",
 CellChangeTimes->{{3.7331439505085187`*^9, 
  3.7331439631472087`*^9}},ExpressionUUID->"5ee61ad1-f12a-4046-bef7-\
d88d7d1f7472"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{
  3.7331439639633713`*^9},ExpressionUUID->"f21da7d0-57ca-465b-9674-\
6bd6aeda6ba0"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Clear", "[", 
  RowBox[{"f", ",", "x", ",", "T3", ",", "T5", ",", "T7", ",", "T9"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.7331440681992044`*^9, 
  3.7331440859715548`*^9}},ExpressionUUID->"6dc48289-f354-40e1-87bc-\
b9cafa67b8c6"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"T3", "[", "x_", "]"}], "=", 
  RowBox[{
   RowBox[{"Series", "[", 
    RowBox[{
     RowBox[{"Sin", "[", "x", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "3"}], "}"}]}], "]"}], "//", 
   "Normal"}]}]], "Input",
 CellChangeTimes->{{3.733144094411063*^9, 
  3.7331441176108947`*^9}},ExpressionUUID->"f37dc069-4c6f-4888-bcb0-\
c32b1a2ebc4c"],

Cell[BoxData[
 RowBox[{"x", "-", 
  FractionBox[
   SuperscriptBox["x", "3"], "6"]}]], "Output",
 CellChangeTimes->{
  3.7331441188241043`*^9},ExpressionUUID->"02507e6e-a098-4155-a989-\
be93164e733b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"T3", "[", "0.3", "]"}]], "Input",
 CellChangeTimes->{{3.733144128122919*^9, 
  3.7331441313394613`*^9}},ExpressionUUID->"25ada31d-f81f-4a61-a528-\
fb4db75191c6"],

Cell[BoxData["0.2955`"], "Output",
 CellChangeTimes->{
  3.733144134567134*^9},ExpressionUUID->"54d6325a-61ea-4693-b8ba-\
7000eebd7e04"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Sin", "[", "c", "]"}], "/", 
   RowBox[{"(", 
    RowBox[{"4", "!"}], ")"}]}], "*", 
  RowBox[{"(", 
   RowBox[{".3", "^", "4"}], ")"}]}]], "Input",
 CellChangeTimes->{{3.733144164488832*^9, 
  3.7331442038116307`*^9}},ExpressionUUID->"ab3c9ce7-d0f7-4e8a-8451-\
860c913a7a72"],

Cell[BoxData[
 RowBox[{"0.00033749999999999996`", " ", 
  RowBox[{"Sin", "[", "c", "]"}]}]], "Output",
 CellChangeTimes->{
  3.733144206410548*^9},ExpressionUUID->"4abc82f4-5554-4eeb-ab51-\
9e3b96df0df9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Abs", "[", 
  RowBox[{
   RowBox[{"Sin", "[", "0.3", "]"}], "-", 
   RowBox[{"T3", "[", "0.3", "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7331444262635503`*^9, 
  3.733144441509159*^9}},ExpressionUUID->"fe41fb35-9ff8-479d-bfce-\
d0f141ccb021"],

Cell[BoxData["0.000020206661339561283`"], "Output",
 CellChangeTimes->{
  3.7331444526257887`*^9},ExpressionUUID->"e4f140a5-ed96-4dcd-9daf-\
098f3dececf7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"n", ",", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"Pi", "/", "4"}], ")"}], "^", 
          RowBox[{"(", 
           RowBox[{"n", "+", "1"}], ")"}]}], ")"}], "/", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"n", "+", "1"}], ")"}], "!"}], ")"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"n", ",", "4", ",", "8"}], "}"}]}], "]"}], "//", "TableForm"}], 
  "//", "N"}]], "Input",
 CellChangeTimes->{{3.73314636918818*^9, 
  3.733146406995192*^9}},ExpressionUUID->"c7b0200b-ba13-49dc-9c3d-\
2a9770fec6d9"],

Cell[BoxData[
 TagBox[GridBox[{
    {"4.`", "0.00249039457019272`"},
    {"5.`", "0.0003259918869273899`"},
    {"6.`", "0.00003657620418217724`"},
    {"7.`", "3.5908604485915093`*^-6"},
    {"8.`", "3.133616890378121`*^-7"}
   },
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[2.0999999999999996`]}, 
       Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}, "RowsIndexed" -> {}}],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.7331464085412984`*^9},ExpressionUUID->"c88d3a60-5033-41fc-a730-\
51a390990373"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"T6", "[", "x_", "]"}], "=", 
  RowBox[{
   RowBox[{"Series", "[", 
    RowBox[{
     RowBox[{"Cos", "[", "x", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"Pi", "/", "4"}], ",", "6"}], "}"}]}], "]"}], "//", 
   "Normal"}]}]], "Input",
 CellChangeTimes->{{3.733146432021063*^9, 
  3.7331464564994583`*^9}},ExpressionUUID->"8568fd78-3c3d-411f-8a38-\
d0be2213ee09"],

Cell[BoxData[
 RowBox[{
  FractionBox["1", 
   SqrtBox["2"]], "-", 
  FractionBox[
   RowBox[{
    RowBox[{"-", 
     FractionBox["\[Pi]", "4"]}], "+", "x"}], 
   SqrtBox["2"]], "-", 
  FractionBox[
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", 
       FractionBox["\[Pi]", "4"]}], "+", "x"}], ")"}], "2"], 
   RowBox[{"2", " ", 
    SqrtBox["2"]}]], "+", 
  FractionBox[
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", 
       FractionBox["\[Pi]", "4"]}], "+", "x"}], ")"}], "3"], 
   RowBox[{"6", " ", 
    SqrtBox["2"]}]], "+", 
  FractionBox[
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", 
       FractionBox["\[Pi]", "4"]}], "+", "x"}], ")"}], "4"], 
   RowBox[{"24", " ", 
    SqrtBox["2"]}]], "-", 
  FractionBox[
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", 
       FractionBox["\[Pi]", "4"]}], "+", "x"}], ")"}], "5"], 
   RowBox[{"120", " ", 
    SqrtBox["2"]}]], "-", 
  FractionBox[
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", 
       FractionBox["\[Pi]", "4"]}], "+", "x"}], ")"}], "6"], 
   RowBox[{"720", " ", 
    SqrtBox["2"]}]]}]], "Output",
 CellChangeTimes->{
  3.73314645733768*^9},ExpressionUUID->"18b7064c-06eb-4ca7-aba1-41a0971ccb82"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"T6", "[", "x", "]"}], ",", 
     RowBox[{"Cos", "[", "x", "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", 
     RowBox[{"Pi", "/", "2"}]}], "}"}], ",", 
   RowBox[{"PlotLegends", "->", "\"\<Expressions\>\""}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7331464620161753`*^9, 
  3.7331465062844543`*^9}},ExpressionUUID->"736a6cff-2a92-4136-a0b8-\
226eee58a31b"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
FjiX2xj8ter/AkT0VQ==
          "]]}, Annotation[#, "Charting`Private`Tag$25150#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
muxKmGbQMcrc9VNFBB2dW///x/0PDFAyjQ==
          "]]}, Annotation[#, "Charting`Private`Tag$25150#2"]& ]}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotRange -> 
     NCache[{{0, Rational[1, 2] Pi}, {-0.0000281326742539445, 
        1.00002312113305}}, {{
        0, 1.5707963267948966`}, {-0.0000281326742539445, 1.00002312113305}}],
      PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       RowBox[{"T6", "(", "x", ")"}], 
       RowBox[{"cos", "(", "x", ")"}]}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               TagBox[#, HoldForm], ",", 
               TagBox[#2, HoldForm]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.7331465089897084`*^9},ExpressionUUID->"545098bd-5830-4ea5-b245-\
625a3082362b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"T6", "[", "x", "]"}], ",", 
     RowBox[{"Cos", "[", "x", "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "5"}], ",", "6"}], "}"}], ",", 
   RowBox[{"PlotLegends", "->", "\"\<Expressions\>\""}]}], "]"}]], "Input",
 CellChangeTimes->{{3.733146531004503*^9, 
  3.733146534636207*^9}},ExpressionUUID->"5d391e59-6a3e-4b81-ad95-\
fdbd5bc2c64d"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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

          "]]}, Annotation[#, "Charting`Private`Tag$25534#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
Lhf8//+R5GCRWh2r8CMX/B/7gyYh
          "]]}, Annotation[#, "Charting`Private`Tag$25534#2"]& ]}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{-5, 6}, {-3.72331694152118, 4.516394833595539}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       RowBox[{"T6", "(", "x", ")"}], 
       RowBox[{"cos", "(", "x", ")"}]}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               TagBox[#, HoldForm], ",", 
               TagBox[#2, HoldForm]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.7331465359818115`*^9},ExpressionUUID->"8a1f7708-a6ff-429f-92b3-\
91a200b4821e"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{759, 833},
WindowMargins->{{Automatic, 60}, {55, Automatic}},
FrontEndVersion->"11.1 for Microsoft Windows (64-bit) (April 18, 2017)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 214, 4, 101, "Title", "ExpressionUUID" -> \
"4725e05b-12f3-464f-a0fb-9063f7beef2d"],
Cell[CellGroupData[{
Cell[819, 30, 157, 3, 70, "Section", "ExpressionUUID" -> \
"30e659c5-2b55-443c-bb74-3babc55c9fc3"],
Cell[979, 35, 375, 11, 30, "Input", "ExpressionUUID" -> \
"125552e4-be42-433b-a468-17de685b4498"],
Cell[CellGroupData[{
Cell[1379, 50, 288, 8, 69, "Input", "ExpressionUUID" -> \
"b00f2608-8960-401e-ad3a-7b61ad07d270"],
Cell[1670, 60, 315, 10, 68, "Output", "ExpressionUUID" -> \
"62e00679-4c42-47a6-be27-f26ee4f7220d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2022, 75, 492, 13, 30, "Input", "ExpressionUUID" -> \
"2753c47e-0350-4ac9-a2b2-be57db304b2f"],
Cell[2517, 90, 222, 6, 56, "Output", "ExpressionUUID" -> \
"09129cc0-9027-447a-ba1b-2db0870e66e2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2776, 101, 473, 14, 30, "Input", "ExpressionUUID" -> \
"470d7fda-04c3-4c07-b384-f2603bb30539"],
Cell[3252, 117, 30569, 559, 238, "Output", "ExpressionUUID" -> \
"f5635a38-ddc5-4b45-a0f1-d5fe65a021c7"]
}, Open  ]],
Cell[33836, 679, 209, 5, 30, "Input", "ExpressionUUID" -> \
"1264cc3d-92e9-4036-8a53-f5291410e8a4"],
Cell[34048, 686, 306, 9, 30, "Input", "ExpressionUUID" -> \
"613cc2e0-830f-4998-94c3-1945c0e7f4fd"],
Cell[CellGroupData[{
Cell[34379, 699, 288, 8, 69, "Input", "ExpressionUUID" -> \
"d1c23df5-a3fd-43eb-9097-b9e09d650cd8"],
Cell[34670, 709, 317, 10, 68, "Output", "ExpressionUUID" -> \
"937bdd4f-efb8-473a-944e-8de09526cc7a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[35024, 724, 395, 12, 30, "Input", "ExpressionUUID" -> \
"ec1f7093-e971-4106-add5-43c9cda2653a"],
Cell[35422, 738, 740, 29, 64, "Output", "ExpressionUUID" -> \
"681411bf-f7e1-47fd-aa4f-13d1af06c5b7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[36199, 772, 471, 14, 30, "Input", "ExpressionUUID" -> \
"4954a9b7-5732-4264-95bd-91d52b2ff19b"],
Cell[36673, 788, 31209, 570, 243, "Output", "ExpressionUUID" -> \
"b001d23b-7d7f-4fb3-abf1-36c70cdb5317"]
}, Open  ]],
Cell[67897, 1361, 235, 5, 30, "Input", "ExpressionUUID" -> \
"cf3a9749-35f5-45b5-8e09-52677b174f98"],
Cell[68135, 1368, 306, 9, 30, "Input", "ExpressionUUID" -> \
"d217aada-facd-46db-8e43-df1df0115ebb"],
Cell[CellGroupData[{
Cell[68466, 1381, 288, 8, 69, "Input", "ExpressionUUID" -> \
"a7831f21-77b3-4b25-9685-153073bba571"],
Cell[68757, 1391, 317, 10, 68, "Output", "ExpressionUUID" -> \
"62f351f5-87d0-4e2f-9a86-91bb533ce99c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[69111, 1406, 418, 13, 30, "Input", "ExpressionUUID" -> \
"6288f421-de52-4c70-b6fd-a65ec33295b3"],
Cell[69532, 1421, 482, 16, 53, "Output", "ExpressionUUID" -> \
"d3fa5270-b936-450a-ad55-865b85786f01"]
}, Open  ]],
Cell[CellGroupData[{
Cell[70051, 1442, 416, 13, 30, "Input", "ExpressionUUID" -> \
"335e01dd-155b-456a-9bad-13f1fbc1b5b6"],
Cell[70470, 1457, 754, 26, 53, "Output", "ExpressionUUID" -> \
"c068e221-2284-4360-b54d-f19d2262ff32"]
}, Open  ]],
Cell[CellGroupData[{
Cell[71261, 1488, 416, 13, 30, "Input", "ExpressionUUID" -> \
"d6de1e2b-004e-4f14-a51b-bcb98f79b7bb"],
Cell[71680, 1503, 1010, 36, 56, "Output", "ExpressionUUID" -> \
"00e2f494-dc1d-4cfa-8eff-1dabf7c40540"]
}, Open  ]],
Cell[CellGroupData[{
Cell[72727, 1544, 413, 13, 30, "Input", "ExpressionUUID" -> \
"8bf5d45c-3231-4438-8f29-0a1e142926da"],
Cell[73143, 1559, 1297, 46, 102, "Output", "ExpressionUUID" -> \
"aadf9b2c-0d40-4286-8373-f721e2eeafd3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[74477, 1610, 715, 20, 50, "Input", "ExpressionUUID" -> \
"3735f301-59d4-423d-a38f-f3832b173c76"],
Cell[75195, 1632, 62223, 1126, 252, "Output", "ExpressionUUID" -> \
"c8a8b654-d06b-4529-bf25-046ae9fc5cd2"]
}, Open  ]],
Cell[137433, 2761, 209, 5, 30, "Input", "ExpressionUUID" -> \
"cf225be1-5fad-4f94-8d28-9cf634d64588"],
Cell[137645, 2768, 304, 9, 30, "Input", "ExpressionUUID" -> \
"4b96055a-15b6-485f-97be-451bdb4a7d1c"],
Cell[CellGroupData[{
Cell[137974, 2781, 264, 7, 30, "Input", "ExpressionUUID" -> \
"30a150a3-f11b-474d-8386-1a28914e5f7a"],
Cell[138241, 2790, 293, 9, 30, "Output", "ExpressionUUID" -> \
"2a9a890a-a501-4e86-bbab-be423edd8c13"]
}, Open  ]],
Cell[CellGroupData[{
Cell[138571, 2804, 473, 13, 30, "Input", "ExpressionUUID" -> \
"8ec72652-faa3-43a1-88b7-318b2aa05534"],
Cell[139047, 2819, 527, 17, 53, "Output", "ExpressionUUID" -> \
"cf55a240-0a7b-4629-9a96-2eee407974d2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[139611, 2841, 284, 7, 30, "Input", "ExpressionUUID" -> \
"efe80f15-d1fe-404a-af31-bcc9bdc965bb"],
Cell[139898, 2850, 422, 15, 59, "Output", "ExpressionUUID" -> \
"a60c3e05-aecc-4d0a-9142-af8f80e63be9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[140357, 2870, 294, 8, 30, "Input", "ExpressionUUID" -> \
"5ee61ad1-f12a-4046-bef7-d88d7d1f7472"],
Cell[140654, 2880, 135, 3, 30, "Output", "ExpressionUUID" -> \
"f21da7d0-57ca-465b-9674-6bd6aeda6ba0"]
}, Open  ]],
Cell[140804, 2886, 258, 6, 30, "Input", "ExpressionUUID" -> \
"6dc48289-f354-40e1-87bc-b9cafa67b8c6"],
Cell[CellGroupData[{
Cell[141087, 2896, 395, 12, 30, "Input", "ExpressionUUID" -> \
"f37dc069-4c6f-4888-bcb0-c32b1a2ebc4c"],
Cell[141485, 2910, 200, 6, 56, "Output", "ExpressionUUID" -> \
"02507e6e-a098-4155-a989-be93164e733b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[141722, 2921, 185, 4, 30, "Input", "ExpressionUUID" -> \
"25ada31d-f81f-4a61-a528-fb4db75191c6"],
Cell[141910, 2927, 136, 3, 30, "Output", "ExpressionUUID" -> \
"54d6325a-61ea-4693-b8ba-7000eebd7e04"]
}, Open  ]],
Cell[CellGroupData[{
Cell[142083, 2935, 323, 10, 30, "Input", "ExpressionUUID" -> \
"ab3c9ce7-d0f7-4e8a-8451-860c913a7a72"],
Cell[142409, 2947, 204, 5, 30, "Output", "ExpressionUUID" -> \
"4abc82f4-5554-4eeb-ab51-9e3b96df0df9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[142650, 2957, 272, 7, 30, "Input", "ExpressionUUID" -> \
"fe41fb35-9ff8-479d-bfce-d0f141ccb021"],
Cell[142925, 2966, 155, 3, 30, "Output", "ExpressionUUID" -> \
"e4f140a5-ed96-4dcd-9daf-098f3dececf7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[143117, 2974, 715, 23, 30, "Input", "ExpressionUUID" -> \
"c7b0200b-ba13-49dc-9c3d-2a9770fec6d9"],
Cell[143835, 2999, 801, 22, 115, "Output", "ExpressionUUID" -> \
"c88d3a60-5033-41fc-a730-51a390990373"]
}, Open  ]],
Cell[CellGroupData[{
Cell[144673, 3026, 424, 13, 30, "Input", "ExpressionUUID" -> \
"8568fd78-3c3d-411f-8a38-d0be2213ee09"],
Cell[145100, 3041, 1279, 50, 72, "Output", "ExpressionUUID" -> \
"18b7064c-06eb-4ca7-aba1-41a0971ccb82"]
}, Open  ]],
Cell[CellGroupData[{
Cell[146416, 3096, 473, 13, 30, "Input", "ExpressionUUID" -> \
"736a6cff-2a92-4136-a0b8-226eee58a31b"],
Cell[146892, 3111, 18192, 357, 238, "Output", "ExpressionUUID" -> \
"545098bd-5830-4ea5-b245-625a3082362b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[165121, 3473, 463, 13, 30, "Input", "ExpressionUUID" -> \
"5d391e59-6a3e-4b81-ad95-fdbd5bc2c64d"],
Cell[165587, 3488, 35371, 639, 242, "Output", "ExpressionUUID" -> \
"8a1f7708-a6ff-429f-92b3-91a200b4821e"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

